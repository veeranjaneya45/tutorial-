#include <iostream>
#include <cmath>
using namespace std;

// Base class Shape
class Shape {
public:
    virtual void getData() = 0; // Pure virtual function
    virtual void printData() = 0;
    virtual double calculateArea() = 0; // Pure virtual function
};

// Derived class Rectangle
class Rectangle : public Shape {
    double length, width;
public:
    void getData() override {
        cout << "Enter length and width of Rectangle: ";
        cin >> length >> width;
    }
    void printData() override {
        cout << "Rectangle Dimensions: " << length << " x " << width << endl;
    }
    double calculateArea() override {
        return length * width;
    }
};

// Derived class Circle
class Circle : public Shape {
    double radius;
public:
    void getData() override {
        cout << "Enter radius of Circle: ";
        cin >> radius;
    }
    void printData() override {
        cout << "Circle Radius: " << radius << endl;
    }
    double calculateArea() override {
        return M_PI * radius * radius;
    }
};

int main() {
    Rectangle rect;
    Circle circ;

    rect.getData();
    circ.getData();

    cout << "\nRectangle Area: " << rect.calculateArea() << endl;
    cout << "Circle Area: " << circ.calculateArea() << endl;

    return 0;
}
